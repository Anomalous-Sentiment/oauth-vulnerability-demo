import Button from 'react-bootstrap/Button';
import styles from '../styles/Home.module.css'
import NavigationBar from '../components/NavigationBar'
import { withSessionSsr } from "../lib/withSession";
import prisma from '../lib/prisma.ts';

export const getServerSideProps = withSessionSsr(
  async function getServerSideProps({ req }) {
    var currUser = null;
    var authorised = false;

    //Check if session exists
    if (req.session.user && req.session.user.loggedIn)
    {
        currUser = req.session.user;
    }
    else
    {
        //Redirect back to login page if not logged in (no session)
        return {
            redirect: {
              destination: '/login',
              permanent: false,
            }
        }
    }

    //Get the current user
    const user = await prisma.user.findUnique({
      where: { username: currUser.username },
    });

    if (user.accessToken)
    {
      authorised = true;
    }



    return {
      props: {
        'username': currUser.username,
        'authorised': authorised
      },
    };
  },
);

export default function resources({username, authorised})
{
  console.log(authorised)

  function handleAuthorisation()
  {
    //Get request token from service provider
    const url = new URL('http://localhost:8100/oauth/request_token');
    url.searchParams.append('oauth_consumer_key', '835f521fbcfb390330265711d0347ec3');

    fetch(url, { mode: 'cors' })
    .then(res => res.json())
    .then(json => {
      console.log(json)
      const reqToken = json['oauth_token='];
      const tokenSecret = json['oauth_token_secret='];

      const authUrl = new URL('http://localhost:8100/oauth/authorize');
      authUrl.searchParams.append('oauth_token', reqToken);

      window.location = authUrl.toString();
  
    })
  }
    
    return(
        <div className={styles.container}>
            <div className={styles.loginBox}>
            <NavigationBar/>
            <h1>
            Service Provider Resources
            </h1>
            <h2>
                Information
            </h2>
            <p>
                This is a page which will display the service provider resources that you have authorised this app to access.
            </p>
            <h2>
                You are logged in as: {username}
            </h2>
            <h3>
                Authorised Resources:
            </h3>
            {!authorised && 
              <div>
                <p>Currently not authorised</p>
                <Button
                onClick={handleAuthorisation}
                >Authorise on Service Provider</Button>
              </div>
            
            }
            </div>
        </div>
    )
}